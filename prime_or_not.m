% Task 1
function m = prime_or_not(z,a)
  b = 0;
  if a == 1
     for i = 2 : z-1
         if rem(z,i) == 0
            b = b+1;
         end
     end 
  elseif a == 2
     for i = 2 : round(z/2)
         if rem(z,i) == 0
            b = b+1;
         end
     end
  else 
     for i = 2 : round(sqrt(z))
         if rem(z,i) == 0
            b = b+1;
         end
     end 
  end
  m = b ;
end
N = input('Enter a number:->');
fprintf('For searching factors upto N-1 press 1 \nFor searching factors upto N/2 press 2 \nFor searching factors upto sqrt(N) press 3 \n');
n = input('Enter the choice you want to make:->') ;

y = prime_or_not(N,n);
if y > 0
        disp('Number is not a prime number')
else
        disp('Number is a prime number')
end

j = @() prime_or_not(N,n);
s = timeit(j);
disp('Time taken by function')
disp(s)

% Task 2
% Part A
 
N = input('Enter the value upto you want number generated by given by function:->');
f = zeros(1,N) ;
for n = 1:N
    f(n) = n^2 + n + 41 ; % Generating function for prime numbers
    y = prime_or_not(f(n),3);
    if y == 0
        a = 0;
    else 
        a = 1;
    end
end
disp(f)
if  a == 0
     fprintf("The function generates prime numbers\n")
else
     fprintf("The function do not generates prime numbers\n")
end

% Part B

p = input('\nEnter the value greater than 3:->') ;
m = 6 * p + 1;
n = 6 * p - 1;
a = prime_or_not(m,3);
b = prime_or_not(n,3);
if  a == 0
    fprintf("The number %d is prime numbers\n", m)
else
    fprintf("The number %d is not prime numbers\n", m)
end
if  b == 0
    fprintf("The number %d is prime numbers\n", n)
else
    fprintf("The number %d is not prime numbers\n", n)
end






